---
# Add CFT output variables to host from persisted results from previous playbooks
- hosts: bigips
  gather_facts: no
  vars_files:
   - [ "~/vars/f5aws/env/{{ env_name }}/{{ inventory_hostname }}.yml" ]
  tasks:
    - name: Add CFT output variables to host from persisted results from previous playbooks
      set_fact:
        ansible_ssh_host={{ hostvars[inventory_hostname].stack_outputs.ManagementInterfacePublicIp }}
        ManagementInterfacePublicIp={{ hostvars[inventory_hostname].stack_outputs.ManagementInterfacePublicIp }}
        ManagementInterfacePrivateIp={{ hostvars[inventory_hostname].stack_outputs.ManagementInterfacePrivateIp }}
        ExternalInterfacePublicIp={{ hostvars[inventory_hostname].stack_outputs.ExternalInterfacePublicIp }}
        ExternalInterfacePrivateIp={{ hostvars[inventory_hostname].stack_outputs.ExternalInterfacePrivateIp }}
        InternalInterfacePrivateIp={{ hostvars[inventory_hostname].stack_outputs.InternalInterfacePrivateIp }}

# Wait for hosts to become ready
- hosts: bigips
  gather_facts: no
  sudo: false
  tasks:
    - name:  Wait for ssh port to open
      local_action: wait_for host={{ ansible_ssh_host }} search_regex=OpenSSH delay=10 port=22
    - name: Wait until BIG-IP is ready for provisioning
      raw: "run /util bash -c 'cat /var/prompt/ps1'"
      until: (result.stdout.find("Active") != -1)
      register: result
      retries: 40

# Basic device setup using tmsh to enable further provisioning
- hosts: bigips
  gather_facts: no
  roles:
    # adds users via tmsh
    - bigip_base 
    # adds json so ansible doesn't puke
    - bigip_jsonify
    # provisions system globals like ntp, dns, snmp, syslog, db keys  
    - bigip_system
    # sets AWS keys and disables DHCP
    - bigip_system_aws
    # sets vlans, self-ips, routes
    - bigip_network

